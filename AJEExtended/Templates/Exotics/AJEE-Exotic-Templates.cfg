//
// Base part templates for AJE-Extended
// Exotic airbreathing engines:
//		Hydrogen Jets
//		RamJets
//
//		By Citizen247
//

@AJEE_TEMPLATES
{
	 //Hydrogen burning J58
	@AJEE_PWJ58
	{
		@MODULE[ModuleEngineConfigs]:NEEDS[RealFuels]
		{
			CONFIG
			{
				name = Pratt&Whitney J58-Hydrogen
							
				massMult = 1		//2700kg
				BPR = 0
				CPR = 8.8
				FPR = 0 
				drySFC = 0.4
				dryThrust = 111.2
				wetThrust = 151.2
				maxThrust = 150
				
				PROPELLANT
				{
					name = LqdHydrogen
					resourceFlowMode = STAGE_STACK_FLOW_BALANCE
					ratio = 1
					DrawGauge = True
				}				
			}	
		}
	}
	 //RamJets
}

 //As an engine that hasn't actually been built yet information for the Sabre is sketchy at best
 //I've looked at a number of sources to get the best possible interpretation, which is:
 //
 //	Airbreathing ISP		= 3000-4000s
 //	Airbreathing Thrust (static)	= 800kn (200kn for small variant)
 //	Airbreathing Thrust (max)	= 1400kn (350kn)
 //	Rocket Mode ISP 		= 460s
 //	Rocket Mode Thrust		= 2000kn (500kn)
 //	mass 				= 6500kg (engine, nacelle, air intakes and pre-cooler)
 //
 //The SABRE engine
 
//B9_Engine_SABRE_S
+PART[B9_Engine_SABRE_M]:NEEDS[AJE&RealFuels&B9_Aerospace]:FOR[AJEEXTENDED]
{
	@name = AJEE_RELSABRE_ROCKET
	@rescaleFactor = 1.5
}
+PART[SXTLANCER]:NEEDS[AJE&RealFuels&SXT&!B9_Aerospace]:FOR[AJEEXTENDED]
{
	@name = AJEE_RELSABRE_ROCKET
	@rescaleFactor = 1.5	
}
+PART[RAPIER]:NEEDS[AJE&RealFuels&!SXT&!B9_Aerospace]:FOR[AJEEXTENDED]
{
	@name = AJEE_RELSABRE_ROCKET
	@rescaleFactor = 3
}

@PART[AJEE_RELSABRE_ROCKET]:FOR[AJEEXTENDED]
{
	@title = SABRE
	@manufacturer = Reaction Engines Limited
	@description = SABRE - Synergetic Air Breathing Rocket Engine - is a new class of engine for propelling both high speed aircraft and spacecraft. SABRE engines are unique in delivering the fuel efficiency of a jet engine with the power and high speed ability of a rocket. Unlike jet engines, which are only capable of powering a vehicle up to Mach 3, three times the speed of sound, SABRE engines are capable of Mach 5.4 in air-breathing mode, and Mach 25 in rocket mode for space flight.
	@mass = 2.5
	
	@MODULE[ModuleEngines*]:HAS[#engineID[AirBreathing]]
 	{
 		@name = ModuleEnginesAJEJet
		Area = 5
		BPR = 0
		CPR = 12
		FPR = 0
		Mdes = 1
		Tdes = 280
		eta_c = 0.95
		eta_t = 0.98
		eta_n = 0.9
		TIT = 900
		TAB = 3800
		exhaustMixer = True
		unifiedThrottle = True
		thrustUpperLimit = 1400
 		maxT3 = 2000
 		
 		defaultTPR = 0.85
		drySFC = 0.8
		dryThrust = 800
		maxThrust = 1400
		
		#@AJEE_TEMPLATES/AJEE_CURVES/TURBORAMJET/velCurve {}
		#@AJEE_TEMPLATES/AJEE_CURVES/TURBORAMJET/atmCurve {}
		
		@PROPELLANT[LiquidFuel]
		{
			@name = LqdHydrogen
		}
 	}
 	
 	@MODULE[ModuleEngines*]:HAS[#engineID[ClosedCycle]]
 	{
 		@maxThrust = 2000
 		
 		!atmosphereCurve {}
 		atmosphereCurve
 		{
 			key = 0, 460
 			key = 1, 250
 		}
 		
 		@PROPELLANT[LiquidFuel]
		{
			@name = LqdHydrogen
			@ratio = 16.104
		}
		@PROPELLANT[Oxidizer]
		{
			@name = LqdOxygen
			@ratio = 5.5
		}
 	}
 	
 	@MODULE[ModuleGimbal]
 	{
 		@gimbalRange = 8
 	}
}

+PART[B9_Engine_SABRE_S]:NEEDS[AJE&RealFuels&B9_Aerospace]:FOR[AJEEXTENDED]
{
	@name = AJEE_RELSABRES_ROCKET
}

@PART[AJEE_RELSABRES_ROCKET]:FOR[AJEEXTENDED]
{
	@title = Mini SABRE
	@manufacturer = Reaction Engines Limited
	@description = SABRE - Synergetic Air Breathing Rocket Engine - is a new class of engine for propelling both high speed aircraft and spacecraft. SABRE engines are unique in delivering the fuel efficiency of a jet engine with the power and high speed ability of a rocket. Unlike jet engines, which are only capable of powering a vehicle up to Mach 3, three times the speed of sound, SABRE engines are capable of Mach 5.4 in air-breathing mode, and Mach 25 in rocket mode for space flight.
	@mass = 0.625
	
	@MODULE[ModuleEngines*]:HAS[#engineID[AirBreathing]]
 	{
 		@name = ModuleEnginesAJEJet
		
		BPR = 0
		CPR = 12
		FPR = 0
		Mdes = 1
		Tdes = 280
		eta_c = 0.95
		eta_t = 0.98
		eta_n = 0.9
		TIT = 900
		TAB = 3800
		exhaustMixer = True
		unifiedThrottle = True
		thrustUpperLimit = 350
 		maxT3 = 2000
 		
 		defaultTPR = 0.85
		drySFC = 0.8
		dryThrust = 200
		maxThrust = 350
		
		#@AJEE_TEMPLATES/AJEE_CURVES/TURBORAMJET/velCurve {}
		#@AJEE_TEMPLATES/AJEE_CURVES/TURBORAMJET/atmCurve {}
		
		@PROPELLANT[LiquidFuel]
		{
			@name = LqdHydrogen
		}
 	}
 	
 	@MODULE[ModuleEngines*]:HAS[#engineID[ClosedCycle]]
 	{
 		@maxThrust = 500
 		
 		!atmosphereCurve {}
 		atmosphereCurve
 		{
 			key = 0, 460
 			key = 1, 250
 		}
 		
 		@PROPELLANT[LiquidFuel]
		{
			@name = LqdHydrogen
			@ratio = 16.104
		}
		@PROPELLANT[Oxidizer]
		{
			@name = LqdOxygen
			@ratio = 5.5
		}
 	}
 	
 	@MODULE[ModuleGimbal]
 	{
 		@gimbalRange = 8
 	}
}

 //SABRE engine precooler
@PART[B9_Engine_SABRE_M_Body]:NEEDS[AJE&B9_Aerospace]:FOR[AJEEXTENDED]
{
	@mass = 2
	@rescaleFactor = 1.5
	!MODULE[TweakScale] {}
}

+PART[radialEngineBody]:NEEDS[AJE]:FOR[AJEEXTENDED]
{
	@name = AJE_SXT_LANCER_PreCooler
	@title = SABRE Precooler
	@rescaleFactor = 3
	@mass = 2
	!MODULE[TweakScale] {}
}

 //SABRE engine intake
@PART[SXTshockConeIntakeSize2]:NEEDS[AJE&SXT]:FOR[AJEEXTENDED]
{
	@mass = 2
	@rescaleFactor = 1.5
	@MODULE[ModuleResourceIntake]
	{
		@name = AJEInlet
		Area = 5
		useTPRCurve=false
						
		inletTitle = #$@AJE_TPR_CURVE_DEFAULTS/Isentropic/title$
		inletDescription = #$@AJE_TPR_CURVE_DEFAULTS/Isentropic/description$
	}
	
	!MODULE[TweakScale] {}
}
@PART[B9_Engine_SABRE_Intake_M]:NEEDS[AJE&B9_Aerospace]:FOR[AJEEXTENDED]
{
	@mass = 2
	@rescaleFactor = 1.5
	@MODULE[AJEInlet]
	{
		@Area = 5
		useTPRCurve=false
	}
	
	!MODULE[TweakScale] {}
}
+PART[shockConeIntake]:NEEDS[AJE&!SXT&!B9_Aerospace]:FOR[AJEEXTENDED]
{
	@name = AJEE_SQD_SABRE_Intake
	@mass = 2
	@rescaleFactor = 3
	@MODULE[ModuleResourceIntake]
	{
		@name = AJEInlet
		Area = 5
		useTPRCurve=false
				
		inletTitle = #$@AJE_TPR_CURVE_DEFAULTS/Isentropic/title$
		inletDescription = #$@AJE_TPR_CURVE_DEFAULTS/Isentropic/description$
	}
	
	!MODULE[TweakScale] {}
}
@PART[B9_Engine_SABRE_Intake_S]:NEEDS[AJE&B9_Aerospace]:FOR[AJEEXTENDED]
{
	@mass = 0.5
	
	!MODULE[TweakScale] {}
}